---
import Layout from "../layouts/Layout.astro";
import Card from "../components/Card.astro";
import NewQButton from "../components/NewQButton.astro";
import Filter from "../components/Filter.astro";
import { auth } from "../lib/firebase/server";
import LogoutButton from "../components/SignoutButton";

/* Get session cookie */
const sessionCookie = Astro.cookies.get("session").value;
if (!sessionCookie) {
  return Astro.redirect("/login");
}
/* Verify session cookie and get user */
let user;
try {
  const decodedClaims = await auth.verifySessionCookie(sessionCookie, true);
  user = await auth.getUser(decodedClaims.uid);
} catch (error) {
  return Astro.redirect("/login");
}

import prisma from "../lib/prisma";

// load in posts from database
const posts = await prisma.posts.findMany();

console.log("all those crispy posts:\n");
console.log(posts);
---

<Layout title="Language Learner">
  <Filter />
  <main>
    <h1>Choose A Question!</h1>
    <p class="instructions">
      <strong>Instructions:</strong> Choose a question that intrests you and submit
      your response? <br />
    </p>
    <ul role="list" class="link-card-grid">
      {posts.map((post) => (
        <li>
          <Card href="" title={post.question} language={post.post_language} time={post.created_at}></Card>
        </li>
      ))}
    </ul>
  </main>
  <NewQButton href="/NewQButton" />
</Layout>

<style>
  main {
    margin: auto;
    padding: 1.5rem;
    max-width: 60ch;
  }
  h1 {
    font-size: 2rem;
    font-weight: 800;
    margin: 0;
  }
  .text-gradient {
    background-image: var(--accent-gradient);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-size: 400%;
    background-position: 0%;
  }
  .instructions {
    line-height: 1.6;
    margin: 1rem 0;
    border: 1px solid rgba(var(--accent), 25%);
    background-color: white;
    padding: 1rem;
    border-radius: 0.4rem;
  }
  .instructions code {
    font-size: 0.875em;
    font-weight: bold;
    background: rgba(var(--accent), 12%);
    color: rgb(var(--accent));
    border-radius: 4px;
    padding: 0.3em 0.45em;
  }
  .instructions strong {
    color: rgb(var(--accent));
  }
  .link-card-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(24ch, 1fr));
    gap: 1rem;
    padding: 0;
  }
</style>
