---
export interface Props {
	question: string;
	difficulty: string;
	topic: string;
    posterID: string;
}

const { question, difficulty, topic } = Astro.props;
const href = "/postID"

// Difficulty flag color 
var difficultyColor;
if (difficulty == "Easy") {
        difficultyColor = "rgb(85 200 100)";
}
else if (difficulty == "Medium") {
        difficultyColor = "rgb(220 150 70)";
} 
else {
        difficultyColor = "rgb(220 70 70)";
}

---

<li class="feed-card">
	<a href={href}>
        <h2>
            {question}
        </h2>
        <p id="difficulty" class="flag">{difficulty}</p>
        <p id="topic" class="flag">{topic}</p>
	</a>
    <div class="profile">Poster: </div>
</li>
<style define:vars={{ difficultyColor }}>
    .profile {
        float: right;
        font-size: 1.25rem;
        padding: 1rem 1.3rem;
    }
    #difficulty {
        background-color: var(--difficultyColor);
    }
    .flag {
        float: left;
        margin: 5px;
        padding: 5px;
        border: solid;
        border-radius: .6em;
    }
	.feed-card {
		list-style: none;
		display: flex;
		padding: 0.25rem;
		background-color: white;
		background-image: none;
		background-size: 400%;
		border-radius: 0.6rem;
		background-position: 100%;
		transition: background-position 0.6s cubic-bezier(0.22, 1, 0.36, 1);
		box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -2px rgba(0, 0, 0, 0.1);
        margin: 15px;
	}

	.feed-card > a {
		/* width: 100%; */
		text-decoration: none;
		line-height: 1.4;
		padding: 1rem 1.3rem;
		border-radius: 0.35rem;
		color: #111;
		background-color: white;
		opacity: 0.8;
	}
	h2 {
		margin: 0;
		font-size: 1.25rem;
		transition: color 0.6s cubic-bezier(0.22, 1, 0.36, 1);
	}
	p {
		margin-top: 0.5rem;
		margin-bottom: 0;
		color: #444;
	}
	.feed-card:is(:hover, :focus-within) {
		background-position: 0;
		background-image: var(--accent-gradient);
	}
	.feed-card:is(:hover, :focus-within) h2 {
		color: rgb(var(--accent));
	}
</style>